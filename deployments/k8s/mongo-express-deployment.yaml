apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express-deployment
  namespace: goddd
  labels:
    # service selector matches with depl. label
    app: mongo-express
spec:
  replicas: 1
  selector:
    matchLabels:
      # depl. selector label matches with template/pod label
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
      - name: mongo-express
        image: mongo-express
        ports:
        # Port that the container listens on (it matches with Service targetPort)
        # Defines the port where the containerized application inside the pod will listen for "incoming" traffic (It is not accessible directly outside the pod unless it's exposed via a Service)
        # Kubernetes will use this information for proper network configurations (like when setting up services or network policies).
        # You can specify multiple containerPort values if your containerized application listens on different ports, for example, one for HTTP and another for metrics.
        # e.g. 
        # - containerPort: 8080  # HTTP traffic
        # - containerPort: 9090  # Metrics
        - containerPort: 8081
        env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_INITDB_ROOT_USERNAME
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: ME_CONFIG_MONGODB_URL
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_ADDR
        - name: ME_CONFIG_BASICAUTH
          value: "false"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express-service
  namespace: goddd
spec:
  selector:
    # service selector matches with deployment label
    app: mongo-express
  # port is the exposed port used for receiving request from other service/pods
  # targetPort is the one that matches with pod/containerPort.
  # nodePort is the one used in the "external" IP but it only has a "valid range" of assignment, i.e. 30000-32767 
  ports:
  - protocol: TCP
    # Port on the Service (The port exposed by the Service to the client -external/internal)
    port: 8081
    # Port inside the pod (The port on the pod that the service forwards traffic to -pod-level)         
    targetPort: 8081
    # Port on the node (The port on the cluster's node used for external access -"node"-level, only for NodePort or LoadBalancer service types)
    nodePort: 30000
  # LoadBalancer type makes the "External"Service as it assigns an external IP for accepting external requests. 
  # This is a bad name because "Internal"Service also loads and balances requests to the nodes in the cluster.
  type: LoadBalancer